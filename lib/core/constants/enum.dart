// enums.dart

/// Enum cho Thư Mục Tài Nguyên
enum EFolderAssets {
  AVATAR("avatar_url_user"),
  BACKGROUND("background_url_user"),
  THUMBNAILCAMPAIGN("thumbnail_campaign_user_id"),
  INSPIRATIONCAMPAIGN("inspiration_campaign_user_id"),
  POTENTIALDRAFT("potential_draft_user_id"),
  COMMENT("comment_user_id"),
  GALLERYIMAGES("galleries_url_user_id");

  final String value;

  const EFolderAssets(this.value);
}

/// Enum cho Trạng Thái Gửi
enum ESubmitStatus {
  APPLIED("APPLIED"),
  WAITING("WAITING"),
  WORKING("WORKING"),
  FINISHED("FINISHED"),
  REJECTED("REJECTED");

  final String value;

  const ESubmitStatus(this.value);
}

/// Enum cho Bộ Lọc Khám Phá
enum EFilterExplore {
  EARLY("EARLY"),
  SUITABLE("SUITABLE");

  final String value;

  const EFilterExplore(this.value);
}

/// Enum cho Trạng Thái Dự Thảo
enum EDraftStatus {
  WAITING("WAITING"),
  REVIEWED("REVIEWED"),
  FINALIZED("FINALIZED");

  final String value;

  const EDraftStatus(this.value);
}

/// Enum cho Trạng Thái Chiến Dịch
enum ECampaignStatus {
  DRAFT("DRAFT"),
  READY("READY"),
  PUBLISHED("PUBLISHED"),
  STARTED("STARTED"),
  FINISHED("FINISHED");

  final String value;

  const ECampaignStatus(this.value);
}

/// Enum cho Loại Mạng Xã Hội
enum ESocialType {
  FACEBOOK("FACEBOOK"),
  YOUTUBE("YOUTUBE"),
  TIKTOK("TIKTOK"),
  INSTAGRAM("INSTAGRAM"),
  GOOGLE("GOOGLE"),
  X("X");

  final String value;

  const ESocialType(this.value);
}

/// Enum cho Loại Media
enum EMediaType {
  IMAGE("IMAGE"),
  VIDEO("VIDEO"),
  LINK("LINK");

  final String value;

  const EMediaType(this.value);
}

/// Enum cho Nội Dung Mạng Xã Hội
enum ESocialContent {
  POST("POST"),
  VIDEO("VIDEO"),
  IMAGE("IMAGE"),
  STORY("STORY"),
  REEL("REEL"),
  LIVESTREAM("LIVESTREAM");

  final String value;

  const ESocialContent(this.value);
}

/// Enum cho Lý Do Từ Chối
enum ERejectSeason {
  BUSYSCHEDULE("BUSY_SCHEDULE"),
  LACKINTEREST("LACK_INTEREST"),
  HEALTHREASONS("HEALTH_REASONS"),
  PERSONALCOMMITMENTS("PERSONAL_COMMITMENTS"),
  OTHER("OTHER");

  final String value;

  const ERejectSeason(this.value);
}

/// Enum cho Loại Thời Gian
enum EDurationType {
  UNDER60S("UNDER_60S"),
  FROM1MTO3M("FROM_1M_TO_3M"),
  FROM4MTO10M("FROM_4M_TO_10M"),
  FROM11MTO15M("FROM_11M_TO_15M"),
  OTHER("OTHER"),
  TEMPLATE1IMAGE("TEMPLATE_1_IMAGE"),
  CAROUSELMAX10IMAGES("CAROUSEL_MAX_10_IMAGES"),
  CAROUSEL11TO35IMAGES("CAROUSEL_11_TO_35_IMAGES"),
  LENGTH15S("LENGTH_15S"),
  WITHIMAGE("WITH_IMAGE"),
  TEXTONLYNOIMAGE("TEXT_ONLY_NO_IMAGE"),
  FROM3MONWARDS("FROM_3M_ONWARDS"),
  MAX15S("MAX_15S"),
  MAX60S("MAX_60S"),
  ONEIMAGE("ONE_IMAGE"),
  MAX10IMAGES("MAX_10_IMAGES"),
  MAX90S("MAX_90S"),
  FROM1MTO10M("FROM_1M_TO_10M"),
  FROM11MTO30M("FROM_11M_TO_30M"),
  FROM30MONWARDS("FROM_30M_ONWARDS");

  final String value;

  const EDurationType(this.value);
}

/// Enum cho Lý Do Báo Cáo
enum EReportReason {
  FORBIDDENITEM("FORBIDDEN_ITEM"), // Hàng hóa cấm
  NONCOMPLIANT("NON_COMPLIANT"), // Không tuân thủ quy định
  SPAM("SPAM"), // Spam
  HARASSMENT("HARASSMENT"), // Quấy rối
  HATESPEECH("HATE_SPEECH"), // Phát ngôn thù hận
  OFFENSIVE("OFFENSIVE"), // Nội dung xúc phạm
  PORNOGRAPHIC("PORNOGRAPHIC"); // Khiêu dâm

  final String value;

  const EReportReason(this.value);
}

/// Enum cho Xác Thực Người Dùng
enum EValidateUser {
  USERNAMEEXISTED("USERNAME_EXISTED"),
  USERISBLOCKED("USER_IS_BLOCKED"),
  EMAILEXISTED("EMAIL_EXISTED"),
  USERNOTFOUND("USER_NOT_FOUND"),
  OTPNOTMATCHED("OTP_NOT_MATCHED"),
  PHONEEXISTED("PHONE_EXISTED"),
  EMAILNOTFOUND("EMAIL_NOT_FOUND"),
  EMAILNOTVERIFY("EMAIL_NOT_VERIFY"),
  EMAILNOTMATCH("EMAIL_NOT_MATCH"),
  PHONE("PHONE_EXISTED"),
  OTPEXPIRED("OTP_EXPIRED"),
  PASSWORDINVALID("PASSWORD_INVALID"),
  KOLPRICINGEXISTED("KOL_PRICING_EXISTED"),
  OLDPASSWORDINVALID("OLD_PASSWORD_INVALID"),
  KOLSUBMISSIONALREADYAPPLIED("KOL_SUBMISSION_ALREADY_APPLIED"),
  PREDRAFTISNOTREVIEWED("PRE_DRAFT_IS_NOT_REVIEWED");

  final String value;

  const EValidateUser(this.value);
}

/// Enum cho Xác Thực Chiến Dịch
enum EValidateCampaign {
  CAMPAIGNNOTFOUND("CAMPAIGN_NOT_FOUND"),
  CAMPAIGNISNOTSTARTED("CAMPAIGN_IS_NOT_STARTED"),
  CAMPAIGNISFULLSLOT("CAMPAIGN_IS_FULL_SLOT"),
  CAMPAIGNISNOTPUBLISHED("CAMPAIGN_IS_NOT_PUBLISHED"),
  POTENTIALOFCAMPAIGNNOTFOUND("POTENTIAL_OF_CAMPAIGN_NOT_FOUND"),
  CAMPAIGNDOESNOTHAVEDRAFT("CAMPAIGN_DOES_NOT_HAVE_DRAFT"),
  TITLEISREQUIRED("TITLE_IS_REQUIRED"),
  DESCRIPTIONISREQUIRED("DESCRIPTION_IS_REQUIRED"),
  ISPUBLICISREQUIRED("IS_PUBLIC_IS_REQUIRED"),
  LENGTHDRAFTDUEDATEFROM1TO5("LENGTH_DRAFT_DUE_DATE_FROM_1_TO_5"),
  GENDERISREQUIRED("GENDER_IS_REQUIRED"),
  AGEFROMISREQUIRED("AGE_FROM_IS_REQUIRED"),
  AGETOISREQUIRED("AGE_TO_IS_REQUIRED"),
  FOLLOWERFROMISREQUIRED("FOLLOWER_FROM_IS_REQUIRED"),
  FOLLOWERTOISREQUIRED("FOLLOWER_TO_IS_REQUIRED"),
  PRICEPERKOLISREQUIRED("PRICE_PER_KOL_IS_REQUIRED"),
  DESCRIPTIONMUSTBEGREATER30("DESCRIPTION_MUST_BE_GREATER_30"),
  PRICEKOLMUSTBEGREATER100K("PRICE_KOL_MUST_BE_GREATER_100K"),
  CREATECAMPAIGNSUCCESSFULLY("CREATE_CAMPAIGN_SUCCESSFULLY"),
  UPDATECAMPAIGNSUCCESSFULLY("UPDATE_CAMPAIGN_SUCCESSFULLY"),
  GETCAMPAIGNSUCCESSFULLY("GET_CAMPAIGN_SUCCESSFULLY"),
  DELETECAMPAIGNSUCCESSFULLY("DELETE_CAMPAIGN_SUCCESSFULLY");

  final String value;

  const EValidateCampaign(this.value);
}

/// Enum cho Xác Thực Bình Luận
enum EValidateComment {
  COMMENTNOTFOUND("COMMENT_NOT_FOUND"),
  CREATECOMMENTSUCCESSFULLY("CREATE_COMMENT_SUCCESSFULLY"),
  UPDATECOMMENTSUCCESSFULLY("UPDATE_COMMENT_SUCCESSFULLY"),
  GETCOMMENTSUCCESSFULLY("GET_COMMENT_SUCCESSFULLY"),
  DELETECOMMENTSUCCESSFULLY("DELETE_COMMENT_SUCCESSFULLY");

  final String value;

  const EValidateComment(this.value);
}

/// Enum cho Xác Thực Dự Thảo
enum EvalidateDraft {
  DRAFTNOTFOUND("DRAFT_NOT_FOUND"),
  DRAFTISALREADYCREATEDINVERSION("DRAFT_IS_ALREADY_CREATED_IN_VERSION"),
  CREATEDRAFTSUCCESSFULLY("CREATE_DRAFT_SUCCESSFULLY"),
  UPDATEDRAFTSUCCESSFULLY("UPDATE_DRAFT_SUCCESSFULLY"),
  GETDRAFTSUCCESSFULLY("GET_DRAFT_SUCCESSFULLY"),
  GETLINKS3DRAFTSUCCESSFULLY("GET_LINK_S3_DRAFT_SUCCESSFULLY"),
  DELETEDRAFTSUCCESSFULLY("DELETE_DRAFT_SUCCESSFULLY"),
  DRAFTISALREADYFINALIZED("DRAFT_IS_ALREADY_FINALIZED");

  final String value;

  const EvalidateDraft(this.value);
}

/// Enum cho Xác Thực Pricing KOL
enum EValidateKolPricing {
  KOLPRICINGNOTFOUND("KOL_PRICING_NOT_FOUND"),
  CREATEKOLPRICINGSUCCESSFULLY("CREATE_KOL_PRICING_SUCCESSFULLY"),
  UPDATEKOLPRICINGSUCCESSFULLY("UPDATE_KOL_PRICING_SUCCESSFULLY"),
  GETKOLPRICINGSUCCESSFULLY("GET_KOL_PRICING_SUCCESSFULLY"),
  DELETEKOLPRICINGSUCCESSFULLY("DELETE_KOL_PRICING_SUCCESSFULLY");

  final String value;

  const EValidateKolPricing(this.value);
}

/// Enum cho Xác Thực KOL Submission
enum EKolSubmit {
  KOLSUBMISSIONNOTFOUND("KOL_SUBMISSION_NOT_FOUND"),
  CREATEKOLSUBMISSIONSUCCESSFULLY("CREATE_KOL_SUBMISSION_SUCCESSFULLY"),
  UPDATEKOLSUBMISSIONSUCCESSFULLY("UPDATE_KOL_SUBMISSION_SUCCESSFULLY"),
  GETKOLSUBMISSIONSUCCESSFULLY("GET_KOL_SUBMISSION_SUCCESSFULLY"),
  DELETEKOLSUBMISSIONSUCCESSFULLY("DELETE_KOL_SUBMISSION_SUCCESSFULLY"),
  KOLSUBMISSIONALREADYAPPLIED("KOL_SUBMISSION_ALREADY_APPLIED"),
  NOTALLOWUPDATESTATUS("NOT_ALLOW_UPDATE_STATUS");

  final String value;

  const EKolSubmit(this.value);
}

/// Enum cho Xác Thực Potential
enum EValidatePotential {
  POTENTIALNOTFOUND("POTENTIAL_NOT_FOUND"),
  CREATEPOTENTIALSUCCESSFULLY("CREATE_POTENTIAL_SUCCESSFULLY"),
  UPDATEPOTENTIALSUCCESSFULLY("UPDATE_POTENTIAL_SUCCESSFULLY"),
  GETPOTENTIALSUCCESSFULLY("GET_POTENTIAL_SUCCESSFULLY"),
  DELETEPOTENTIALSUCCESSFULLY("DELETE_POTENTIAL_SUCCESSFULLY");

  final String value;

  const EValidatePotential(this.value);
}
